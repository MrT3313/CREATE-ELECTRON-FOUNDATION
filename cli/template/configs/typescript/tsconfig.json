{
  "compilerOptions": {
    /* Language and Environment */
    "target": "ES2022" /* Set the JavaScript language version for emitted JavaScript */,
    "lib": [
      "DOM",
      "DOM.Iterable",
      "ESNext"
    ] /* Specify a set of bundled library declaration files */,
    "jsx": "react-jsx" /* Specify what JSX code is generated */,

    /* Modules */
    "module": "ESNext" /* Specify what module code is generated */,
    "moduleResolution": "bundler" /* Specify how TypeScript looks up a file from a given module specifier */,
    "allowImportingTsExtensions": true /* Allow imports to include TypeScript file extensions */,
    "resolveJsonModule": true /* Enable importing .json files */,

    /* JavaScript Support */
    "allowJs": true /* Allow JavaScript files to be a part of your program */,

    /* Emit */
    "declaration": false /* Generate .d.ts files from TypeScript and JavaScript files in your project */,
    "noEmit": true /* Disable emitting files from a compilation */,
    "isolatedModules": true /* Ensure that each file can be safely transpiled without relying on other imports */,

    /* Interop Constraints */
    "esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules */,
    "forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports */,

    /* Type Checking */
    "strict": true /* Enable all strict type-checking options */,
    "noImplicitAny": true /* Enable error reporting for expressions and declarations with an implied 'any' type */,
    "strictNullChecks": true /* When type checking, take into account 'null' and 'undefined' */,
    "strictFunctionTypes": true /* When assigning functions, check to ensure parameters and the return values are subtype-compatible */,
    "strictBindCallApply": true /* Check that the arguments for 'bind', 'call', and 'apply' methods match the original function */,
    "strictPropertyInitialization": true /* Check for class properties that are declared but not set in the constructor */,
    "noImplicitThis": true /* Enable error reporting when 'this' is given the type 'any' */,
    "useUnknownInCatchVariables": true /* Default catch clause variables as 'unknown' instead of 'any' */,
    "alwaysStrict": true /* Ensure 'use strict' is always emitted */,
    "noUnusedLocals": true /* Enable error reporting when local variables aren't read */,
    "noUnusedParameters": true /* Raise an error when a function parameter isn't read */,
    "exactOptionalPropertyTypes": true /* Interpret optional property types as written, rather than adding 'undefined' */,
    "noImplicitReturns": true /* Enable error reporting for codepaths that do not explicitly return in a function */,
    "noFallthroughCasesInSwitch": true /* Enable error reporting for fallthrough cases in switch statements */,
    "noUncheckedIndexedAccess": true /* Add 'undefined' to a type when accessed using an index */,

    /* Completeness */
    "skipLibCheck": true /* Skip type checking all .d.ts files */,

    /* Additional Options */
    "allowSyntheticDefaultImports": true /* Allow 'import x from y' when a module doesn't have a default export */,
    "experimentalDecorators": true /* Enable experimental support for legacy experimental decorators */,
    "emitDecoratorMetadata": true /* Emit design-type metadata for decorated declarations in source */,

    /* Path Aliases */
    "baseUrl": "."
  },

  "references": [{ "path": "./tsconfig.node.json" }],

  "include": [
    "src/**/*.ts",
    "src/**/*.tsx",
    "electron/**/*.ts",
    "types/**/*.ts",
    "vite.config.ts"
  ],

  "exclude": ["node_modules", "dist", "build", "**/*.spec.ts", "**/*.test.ts"]
}
