# ==================================================================================================
# SUMMARY
# ==================================================================================================
# This workflow updates the example projects in the DOCS/examples directory.
#
# Triggers:
#   - This workflow is triggered automatically upon the successful completion of the
#     'E2E Tests' workflow on the 'main' branch.
#
# Key Steps:
#   1. Checkout Repository: Checks out the code.
#   2. Clean Examples Directory: Removes old examples to ensure a clean slate.
#   3. Download Example Artifacts: Downloads the generated example projects, which were
#      uploaded as artifacts by the 'E2E Tests' workflow.
#   4. Commit Updated Examples: Commits the new/updated examples to the repository.
#      A [skip ci] tag is included in the commit message to prevent an infinite
#      loop of workflow runs.
# ==================================================================================================
name: Update Examples

on:
  workflow_run:
    workflows: ['E2E Tests']
    types:
      - completed
    branches:
      - main

jobs:
  # This job waits for the 'Core CI' workflow to complete for the same commit.
  # It is necessary because 'Core CI' and 'E2E Tests' run in parallel, and we need both to succeed.
  wait-for-core-ci:
    name: Wait for Core CI
    runs-on: ubuntu-latest
    # Only run this job if the triggering 'E2E Tests' workflow was successful.
    if: github.event.workflow_run.conclusion == 'success'
    outputs:
      conclusion: ${{ steps.check.outputs.conclusion }}
    steps:
      - name: 'Wait for "Core CI" workflow to complete'
        id: check
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          HEAD_SHA: ${{ github.event.workflow_run.head_sha }}
        run: |
          echo "Waiting for 'Core CI' workflow to complete for commit $HEAD_SHA..."
          # Poll for up to 5 minutes
          for i in {1..30}; do
            # Get the conclusion of the latest 'Core CI' run for the specific commit on the main branch
            conclusion=$(gh run list --workflow "Core CI" --commit "$HEAD_SHA" --branch main --status completed --limit 1 --json conclusion --jq '.[0].conclusion // "pending"')

            if [[ "$conclusion" == "success" ]]; then
              echo "✅ 'Core CI' workflow completed successfully."
              echo "::set-output name=conclusion::success"
              exit 0
            elif [[ "$conclusion" != "pending" ]]; then
              echo "❌ 'Core CI' workflow did not succeed. Conclusion: $conclusion"
              echo "::set-output name=conclusion::$conclusion"
              exit 0
            fi

            echo "($i/30) 'Core CI' workflow is pending or in progress. Waiting 10 seconds..."
            sleep 10
          done

          echo "❌ Timed out waiting for 'Core CI' workflow to complete."
          echo "::set-output name=conclusion::timed_out"

  update-examples:
    name: Update Examples
    runs-on: ubuntu-latest
    needs: [wait-for-core-ci]
    # Only run if the 'wait-for-core-ci' job reports a 'success' conclusion.
    if: needs.wait-for-core-ci.outputs.conclusion == 'success'
    permissions:
      contents: write # Required to push changes to the repository.
    steps:
      # 1. Check out the repository code.
      - name: Checkout Repository
        uses: actions/checkout@v4

      # 2. Clean the examples directory before downloading new artifacts.
      # This ensures that any removed or renamed examples are no longer present.
      - name: Clean Examples Directory
        run: |
          if [ -d "DOCS/examples" ]; then
            rm -rf DOCS/examples/*
          fi
          mkdir -p DOCS/examples/tmp

      # 3. Download all artifacts from the triggering 'e2e-test' workflow job.
      - name: Download Example Artifacts
        uses: actions/download-artifact@v4
        with:
          path: DOCS/examples
          # Explicitly specify the triggering workflow run ID to get its artifacts.
          run-id: ${{ github.event.workflow_run.id }}

      - name: Display Downloaded Examples
        run: |
          echo "Listing downloaded examples..."
          ls -R DOCS/examples

      # 4. Configure Git with credentials for the github-actions bot.
      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      # 5. Commit and push the updated examples to the repository.
      - name: Commit Updated Examples
        run: |
          git add -f DOCS/examples
          # Check if there are any changes to commit
          if git diff-index --quiet HEAD; then
            echo "No changes to commit."
          else
            git commit -m "chore(examples): update /DOCS/examples from e2e tests" -m "[skip ci]"
            git push
          fi
